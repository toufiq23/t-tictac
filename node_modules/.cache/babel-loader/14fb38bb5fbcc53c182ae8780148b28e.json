{"ast":null,"code":"var _jsxFileName = \"/home/toufiq/coding/online_tuto_sites/UDEMY/frontEnd/react_hooks_patel/PROJECTs/Tic_Tac_Game/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initMatrix = [];\n\nfunction App() {\n  _s();\n\n  const [matrix, setMatrix] = useState(initMatrix);\n  const [matrixSize, setMatrixSize] = useState(4);\n  const [currentPlayer, setCurrentPlayer] = useState(\"o\");\n  const [selRow, setSelRow] = useState(null);\n  const [selColumn, setSelColumn] = useState(null);\n  const [winner, setWinner] = useState(false);\n  useEffect(() => {\n    const row = new Array(matrixSize).fill(null);\n    const tempMatrix = [];\n\n    for (let i = 0; i < matrixSize; i++) {\n      tempMatrix.push([...row]);\n    }\n\n    setMatrix(tempMatrix);\n  }, []);\n\n  function squareClick(row, column) {\n    if (!matrix[row][column]) {\n      let nextPlayer = currentPlayer === \"x\" ? \"o\" : \"x\";\n      setCurrentPlayer(nextPlayer);\n      const matrixCopy = [...matrix];\n      matrixCopy[row][column] = nextPlayer;\n      setMatrix(matrixCopy);\n    }\n  }\n\n  function isWinner() {\n    let vertical = true;\n    let horizontal = true;\n    let d1 = true;\n    let d2 = true;\n  }\n\n  useEffect(() => {\n    if (!winner) {\n      isWinner();\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: matrix.map((val, column) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"column\",\n          children: val.map((val1, row) => /*#__PURE__*/_jsxDEV(\"div\", {\n            onClick: () => {\n              squareClick(row, column);\n            },\n            className: \"row\",\n            children: matrix[row][column]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 10\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 8\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"rNWy1EZwB5RvYaAPFPkzd+edA1g=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/toufiq/coding/online_tuto_sites/UDEMY/frontEnd/react_hooks_patel/PROJECTs/Tic_Tac_Game/src/App.js"],"names":["React","useState","useEffect","initMatrix","App","matrix","setMatrix","matrixSize","setMatrixSize","currentPlayer","setCurrentPlayer","selRow","setSelRow","selColumn","setSelColumn","winner","setWinner","row","Array","fill","tempMatrix","i","push","squareClick","column","nextPlayer","matrixCopy","isWinner","vertical","horizontal","d1","d2","map","val","val1"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAO,WAAP;;AAEA,MAAMC,UAAU,GAAG,EAAnB;;AACA,SAASC,GAAT,GAAe;AAAA;;AAEd,QAAK,CAACC,MAAD,EAASC,SAAT,IAAsBL,QAAQ,CAACE,UAAD,CAAnC;AACA,QAAM,CAACI,UAAD,EAAaC,aAAb,IAA8BP,QAAQ,CAAC,CAAD,CAA5C;AACA,QAAM,CAACQ,aAAD,EAAgBC,gBAAhB,IAAoCT,QAAQ,CAAC,GAAD,CAAlD;AACA,QAAM,CAACU,MAAD,EAASC,SAAT,IAAsBX,QAAQ,CAAC,IAAD,CAApC;AACA,QAAM,CAACY,SAAD,EAAYC,YAAZ,IAA4Bb,QAAQ,CAAC,IAAD,CAA1C;AACA,QAAM,CAACc,MAAD,EAASC,SAAT,IAAsBf,QAAQ,CAAC,KAAD,CAApC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACf,UAAMe,GAAG,GAAG,IAAIC,KAAJ,CAAUX,UAAV,EAAsBY,IAAtB,CAA2B,IAA3B,CAAZ;AAEA,UAAMC,UAAU,GAAG,EAAnB;;AAEA,SAAI,IAAIC,CAAC,GAAC,CAAV,EAAaA,CAAC,GAACd,UAAf,EAA2Bc,CAAC,EAA5B,EAA+B;AAC9BD,MAAAA,UAAU,CAACE,IAAX,CAAgB,CAAC,GAAGL,GAAJ,CAAhB;AACA;;AACDX,IAAAA,SAAS,CAACc,UAAD,CAAT;AACA,GATQ,EASN,EATM,CAAT;;AAWA,WAASG,WAAT,CAAsBN,GAAtB,EAA2BO,MAA3B,EAAmC;AAClC,QAAG,CAACnB,MAAM,CAACY,GAAD,CAAN,CAAYO,MAAZ,CAAJ,EAAwB;AACvB,UAAIC,UAAU,GAAGhB,aAAa,KAAK,GAAlB,GAAwB,GAAxB,GAA8B,GAA/C;AACAC,MAAAA,gBAAgB,CAACe,UAAD,CAAhB;AACA,YAAMC,UAAU,GAAG,CAAC,GAAGrB,MAAJ,CAAnB;AACAqB,MAAAA,UAAU,CAACT,GAAD,CAAV,CAAgBO,MAAhB,IAA0BC,UAA1B;AACAnB,MAAAA,SAAS,CAACoB,UAAD,CAAT;AACA;AACD;;AAED,WAASC,QAAT,GAAmB;AAClB,QAAIC,QAAQ,GAAG,IAAf;AACA,QAAIC,UAAU,GAAG,IAAjB;AACA,QAAIC,EAAE,GAAG,IAAT;AACA,QAAIC,EAAE,GAAG,IAAT;AAGA;;AAED7B,EAAAA,SAAS,CAAC,MAAM;AACf,QAAG,CAACa,MAAJ,EAAW;AACVY,MAAAA,QAAQ;AACR;AACD,GAJQ,CAAT;AAMC,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,2BACE;AAAQ,MAAA,SAAS,EAAC,YAAlB;AAAA,6BACF;AAAA,kBAEEtB,MAAM,CAAC2B,GAAP,CAAW,CAACC,GAAD,EAAMT,MAAN,kBACV;AAAK,UAAA,SAAS,EAAC,QAAf;AAAA,oBACES,GAAG,CAACD,GAAJ,CAAQ,CAACE,IAAD,EAAOjB,GAAP,kBACR;AAAK,YAAA,OAAO,EAAE,MAAM;AAACM,cAAAA,WAAW,CAACN,GAAD,EAAMO,MAAN,CAAX;AAAyB,aAA9C;AAAgD,YAAA,SAAS,EAAC,KAA1D;AAAA,sBACEnB,MAAM,CAACY,GAAD,CAAN,CAAYO,MAAZ;AADF;AAAA;AAAA;AAAA;AAAA,kBADA;AADF;AAAA;AAAA;AAAA;AAAA,gBADD;AAFF;AAAA;AAAA;AAAA;AAAA;AADE;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAmBD;;GAhEQpB,G;;KAAAA,G;AAkET,eAAeA,GAAf","sourcesContent":["import React, {useState, useEffect} from 'react'\nimport \"./App.css\"\n\nconst initMatrix = []\nfunction App() {\n\n\tconst[matrix, setMatrix] = useState(initMatrix)\n\tconst [matrixSize, setMatrixSize] = useState(4)\n\tconst [currentPlayer, setCurrentPlayer] = useState(\"o\")\n\tconst [selRow, setSelRow] = useState(null)\n\tconst [selColumn, setSelColumn] = useState(null)\n\tconst [winner, setWinner] = useState(false)\n\n\tuseEffect(() => {\n\t\tconst row = new Array(matrixSize).fill(null)\n\n\t\tconst tempMatrix = []\n\n\t\tfor(let i=0; i<matrixSize; i++){\n\t\t\ttempMatrix.push([...row])\n\t\t}\n\t\tsetMatrix(tempMatrix)\n\t}, [])\n\n\tfunction squareClick (row, column) {\n\t\tif(!matrix[row][column]){\n\t\t\tlet nextPlayer = currentPlayer === \"x\" ? \"o\" : \"x\"\n\t\t\tsetCurrentPlayer(nextPlayer)\n\t\t\tconst matrixCopy = [...matrix]\n\t\t\tmatrixCopy[row][column] = nextPlayer;\n\t\t\tsetMatrix(matrixCopy)\n\t\t}\n\t}\n\n\tfunction isWinner(){\n\t\tlet vertical = true\n\t\tlet horizontal = true\n\t\tlet d1 = true\n\t\tlet d2 = true\n\n\t\t\n\t}\n\n\tuseEffect(() => {\n\t\tif(!winner){\n\t\t\tisWinner()\n\t\t}\n\t})\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n\t\t\t\t<div>\n\t\t\t\t\t{\n\t\t\t\t\t\tmatrix.map((val, column) => (\n\t\t\t\t\t\t\t<div className=\"column\">\n\t\t\t\t\t\t\t\t{val.map((val1, row) => (\n\t\t\t\t\t\t\t\t\t<div onClick={() => {squareClick(row, column)}} className=\"row\">\n\t\t\t\t\t\t\t\t\t\t{matrix[row][column]}\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t))\n\t\t\t\t\t}\n\t\t\t\t</div>\n\t\t\t</header>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}